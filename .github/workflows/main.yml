# This is a basic workflow to help you get started with Actions

name: CI - Testes com Capybara

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Capybara@${{ matrix.browser}} ${{ matrix.os }} headless=${{ matrix.headless }}
    strategy:
      fail-fast: false
      matrix:
        headless: [false]
        browser: [chrome, firefox, opera]
    runs-on: macos-latest

    steps:
      - name: Checkout source tree
      - uses: actions/checkout@v2
        
      - name: Install chrome Browser
      - uses: browser-actions/setup-chrome@latest
      - run: chrome --version
      
      - name: Install firefox Browser
      - uses: browser-actions/setup-firefox@latest
      - run: firefox --version
      
      - name: Install npm dependencies
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: |
          npm install -g allure-commandline --save-dev
      - name: Step 2 - Grant execute permission for gradlew
        if: always()
        continue-on-error: true
      - run: chmod +x ./webdrivers/**
        
      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
      - uses: ruby/setup-ruby@v1
        # uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Run tests
        run: |
             gem install cucumber
             bundler install
             bundle exec cucumber BROWSER=${{matrix.browser}}

      - name: Step 4 - Get allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages  # default: gh-pages
          publish_dir: logs
          destination_dir: ${{ matrix.browser}}
